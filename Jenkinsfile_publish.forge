#!groovy
package com.plangrid

@Library("build-mobile-groovy") _ // https://github.com/plangrid/build-mobile-groovy

env.PROJECT_NAME = 'sqldelight'
env.timeoutAmount = 90

ARTIFACTORY_URL = "https://plangrid.jfrog.io/plangrid/libs-release-local/"

node("aws-centos") {
  withCredentials([
    [
      $class          : 'UsernamePasswordMultiBinding',
      credentialsId   : "artifactory",
      usernameVariable: 'ARTIFACTORY_USER',
      passwordVariable: 'ARTIFACTORY_PASSWORD'
    ],
  ]) {
    def DOCKER_ID = null
    AcsStage("SCM") {
      checkout scm
    }
    currentBuild.result = "SUCCESS"
    CURRENT_DIR = sh(returnStdout: true, script: "pwd").trim()

    AcsStage('Run Docker') {
      DOCKER_TAG = sh(returnStdout: true, script: "docker build -t sqldelight_tag .")
      sh "echo DOCKER_TAG=${DOCKER_TAG}"

      DOCKER_ID = sh(returnStdout: true, script: "docker run \
                  -e BUILD_NUMBER \
                  -e BRANCH_NAME \
                  -e JENKINS_URL \
                  -e BUILD_URL \
                  -e BUILD_USER \
                  -e ARTIFACTORY_USER \
                  -e ARTIFACTORY_PASSWORD \
                  -itd \
                  --network host \
                  -v ${CURRENT_DIR}:/sqldelight \
                  -w /sqldelight sqldelight_tag"
      ).trim()

      containerExec = { cmd ->
        sh "docker exec ${DOCKER_ID} bash -c '${cmd}'"
      }
    }

    containerExec("git config --global --add safe.directory /sqldelight")
    containerExec("mkdir -p ~/.gradle")
    containerExec("echo internalUsername:$ARTIFACTORY_USER >> ~/.gradle/gradle.properties")
    containerExec("echo internalPassword:$ARTIFACTORY_PASSWORD >> ~/.gradle/gradle.properties")
    containerExec("echo internalUrl:$ARTIFACTORY_URL >> ~/.gradle/gradle.properties")

    AcsStage("Publish sqldelight-gradle-plugin") {
      containerExec("./gradlew --no-daemon sqldelight-gradle-plugin:publishAllPublicationsToInternalRepository")
    }
  }
}
